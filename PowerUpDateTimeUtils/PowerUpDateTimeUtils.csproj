<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B3D1C345-989C-487B-A3ED-C65338E52421}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>PowerUpDateTimeUtils</RootNamespace>
    <AssemblyName>PowerUpDateTimeUtils</AssemblyName>
    <ReleaseVersion>0.3.2</ReleaseVersion>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>PowerUpDateTimeUtils.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DocumentationFile>..\..\XmlDocumentation\PowerUpDateTimeUtils.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <WarningLevel>4</WarningLevel>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="DateTimeUtils.cs" />
    <Compile Include="CalendarInfo.cs" />
    <Compile Include="LeapMonthInfo.cs" />
    <Compile Include="CalendarWeek.cs" />
    <Compile Include="Culture.cs" />
    <Compile Include="CultureComparer.cs" />
    <Compile Include="DateFormat.cs" />
    <Compile Include="DateFormatInfo.cs" />
    <Compile Include="DateTimeUtils.CalendarWeek.cs" />
    <Compile Include="DateTimeUtils.CalendarWeekStartDate.cs" />
    <Compile Include="DateTimeUtils.Diff.cs" />
    <Compile Include="DateTimeUtils.GetAge.cs" />
    <Compile Include="DateTimeUtils.GetCalendarWeekCount.cs" />
    <Compile Include="DateTimeUtils.GetDayName.cs" />
    <Compile Include="DateTimeUtils.GetQuarter.cs" />
    <Compile Include="DateTimeUtils.IsGermanHoliday.cs" />
    <Compile Include="GermanSpecialDay.cs" />
    <Compile Include="GermanSpecialDayKey.cs" />
    <Compile Include="GermanSpecialDays.cs" />
    <Compile Include="DateTimeUtils.SpecialDays.cs" />
    <Compile Include="DateTimeUtils.Iso.cs" />
    <Compile Include="DateTimeUtils.IsPotentialDateTime.cs" />
    <Compile Include="DateTimeUtils.MonthName.cs" />
    <Compile Include="DateTimeUtils.NormalizeDate.cs" />
    <Compile Include="MonthInfo.cs" />
    <Compile Include="QuarterInfo.cs" />
    <Compile Include="DateTimeUtils.Nist.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="ClassDiagram.cd" />
    <None Include="packages.config" />
    <None Include="PowerUpDateTimeUtils.snk" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <Reference Include="InMemoryLoader, Version=1.0.6605.33324, Culture=en-GB, PublicKeyToken=edaaf05874e4e21a, processorArchitecture=MSIL">
      <HintPath>..\packages\InMemoryLoader.1.0.6605.33324\lib\InMemoryLoader.dll</HintPath>
    </Reference>
    <Reference Include="InMemoryLoaderBase, Version=1.0.6605.24982, Culture=en-GB, PublicKeyToken=0b5fb30ca5b127b9, processorArchitecture=MSIL">
      <HintPath>..\packages\InMemoryLoader.1.0.6605.33324\lib\InMemoryLoaderBase.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="log4net, Version=2.0.8.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a">
      <HintPath>..\packages\log4net.2.0.8\lib\net45-full\log4net.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy TabWidth="4" IndentWidth="4" RemoveTrailingWhitespace="True" NoTabsAfterNonTabs="False" EolMarker="Native" FileWidth="80" TabsToSpaces="True" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentBlock="True" IndentBraces="False" IndentSwitchCaseSection="True" LabelPositioning="OneLess" NewLinesForBracesInTypes="True" NewLinesForBracesInMethods="True" SpaceWithinMethodDeclarationParenthesis="False" SpaceBetweenEmptyMethodDeclarationParentheses="False" SpaceWithinMethodCallParentheses="False" SpaceBetweenEmptyMethodCallParentheses="False" SpaceAfterControlFlowStatementKeyword="True" SpaceWithinExpressionParentheses="False" SpaceWithinCastParentheses="False" SpaceWithinOtherParentheses="False" SpaceAfterCast="False" SpacesIgnoreAroundVariableDeclaration="False" SpaceBetweenEmptySquareBrackets="False" SpaceWithinSquareBrackets="False" SpaceAfterColonInBaseTypeDeclaration="True" SpaceAfterComma="True" SpaceAfterDot="False" SpaceAfterSemicolonsInForStatement="True" SpaceBeforeColonInBaseTypeDeclaration="True" SpaceBeforeComma="False" SpaceBeforeDot="False" SpaceBeforeSemicolonsInForStatement="False" SpacingAroundBinaryOperator="Single" WrappingPreserveSingleLine="True" WrappingKeepStatementsOnSingleLine="True" PlaceSystemDirectiveFirst="True" IndentSwitchSection="False" NewLinesForBracesInProperties="False" NewLinesForBracesInAccessors="False" NewLinesForBracesInAnonymousMethods="False" NewLinesForBracesInControlBlocks="False" NewLinesForBracesInAnonymousTypes="False" NewLinesForBracesInObjectCollectionArrayInitializers="False" NewLinesForBracesInLambdaExpressionBody="False" NewLineForElse="False" NewLineForCatch="False" NewLineForFinally="False" NewLineForMembersInObjectInit="False" NewLineForMembersInAnonymousTypes="False" NewLineForClausesInQuery="False" SpacingAfterMethodDeclarationName="True" SpaceAfterMethodCallName="True" SpaceBeforeOpenSquareBracket="True" scope="text/x-csharp" />
          <TextStylePolicy inheritsSet="null" scope="application/config+xml" />
          <XmlFormattingPolicy inheritsSet="null" scope="application/config+xml" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
</Project>